'''
- 常用方法
    - match(re, str)：从开头开始匹配，如果开头不符合，则匹配失败
    - search(re,str):扫描整个字符串，返回第一个符合条件的结果，没有匹配到，则返回none
    - findall(re,str):查找整个字符串，返回所有匹配到的结果
    - sub(re,要替换的内容,str)：替换匹配到的数据
    - compile(re):将匹配规则编译成正则表达式对象，以达到复用的效果
- 返回结果为sre_match对象，有两个方法group()\span()
   - group():得到结果的内容
   - span():得到匹配到的范围，即结果字符串在原字符窜中的位置范围。
- 分组：即字符串截取，用()包裹好想要提取的子字符串，调用group()方法，并传入分组索引即可得到，索引从1开始
- 通用匹配：.*, . 表示除换行符之外的任意字符，*表示匹配前面字符0或多个
- 贪婪与非贪婪：.* 表示贪婪模式，会尽可能的匹配多个导致匹配结果不准确，.*?表示非贪婪模式，尽可能匹配更少的，**注意：非贪婪模式放在字符串结尾，可能会匹配不到**
- 修饰符：第三个参数，做修饰用
    - re.S:表示匹配包括换行符在内的所有字符
    - re.I:表示对大小写不敏感
- 转移符： \，用来转义特殊字符
'''
import re

str = "Extra stings Hello 123456 world_This is a Regex Demo Exrea stings"

# + 表示一个或多了
# .*？表示非贪婪模式
# \w{10}匹配字母数字下划线10个，{4,10}贪婪模式，会取10个
# ()分组字符串提取
result = re.match(r"^extra.*?(\d+)\s(\w{10})", str, re.I)

print(result.group())  # 匹配结果的内容
print(result.span())  # 结果字符串在原字符串中的位置范围
print(result.group(1))  # 取出第一个分组结果
print(result.group(2))
